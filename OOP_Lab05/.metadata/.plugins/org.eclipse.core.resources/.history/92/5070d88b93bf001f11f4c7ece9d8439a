package hust.soict.dsai.javafx;
import javafx.fxml.FXML;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Line;
import javafx.scene.control.Button;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;

public class PainterController {

    @FXML
    private Button clearButton; // Nút Clear

    @FXML
    private RadioButton eraserRadioButton; // Công cụ Eraser

    @FXML
    private RadioButton penRadioButton; // Công cụ Pen

    @FXML
    private ToggleGroup toolGroup; // ToggleGroup cho các công cụ (Eraser và Pen)

    @FXML
    private Pane drawingAreaPane; // Vùng vẽ

    private double lastX, lastY;
    private boolean isErasing = false; // Biến lưu trạng thái công cụ

    // Hàm khởi tạo để cài đặt sự kiện
    public void initialize() {
        // Cài đặt sự kiện cho các công cụ
        toolGroup.selectedToggleProperty().addListener((observable, oldValue, newValue) -> {
            if (eraserRadioButton.isSelected()) {
                isErasing = true;
            } else {
                isErasing = false;
            }
        });

        // Cài đặt sự kiện vẽ khi di chuột
        drawingAreaPane.setOnMousePressed(this::startDrawing);
        drawingAreaPane.setOnMouseDragged(this::continueDrawing);

        // Cài đặt sự kiện cho nút Clear
        clearButton.setOnAction(e -> clearDrawing());
    }

    // Bắt đầu vẽ khi nhấn chuột
    private void startDrawing(MouseEvent event) {
        lastX = event.getX();
        lastY = event.getY();
    }

    // Tiếp tục vẽ khi kéo chuột (vẽ pen hoặc xóa eraser)
    private void continueDrawing(MouseEvent event) {
        if (isErasing) {
            eraseDrawing(event);
        } else {
            drawLine(event);
        }
        lastX = event.getX();
        lastY = event.getY();
    }

    // Vẽ một đường thẳng
    private void drawLine(MouseEvent event) {
        Line line = new Line(lastX, lastY, event.getX(), event.getY());
        line.setStroke(Color.BLACK); // Màu bút vẽ
        line.setStrokeWidth(2); // Độ dày nét vẽ
        drawingAreaPane.getChildren().add(line);
    }

    // Xóa một đoạn đường
    private void eraseDrawing(MouseEvent event) {
        for (javafx.scene.Node node : drawingAreaPane.getChildren()) {
            if (node instanceof Line) {
                Line line = (Line) node;
                if (Math.abs(line.getStartX() - event.getX()) < 10 && Math.abs(line.getStartY() - event.getY()) < 10) {
                    drawingAreaPane.getChildren().remove(line);
                }
            }
        }
    }

    // Hàm xóa toàn bộ vẽ
    private void clearDrawing() {
        drawingAreaPane.getChildren().clear();
    }
}
