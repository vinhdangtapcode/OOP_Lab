package hust.soict.dsai.aims.cart;
import hust.soict.dsai.aims.media.DigitalVideoDisc;

public class Cart {
	public static final int MAX_NUMBERS_ORDERED = 20;
	public float totalCost() {
        float cost = 0;
        for (int i=0;i<qtyOrdered;i++) {
            cost += itemOrdered[i].getCost();  
        }
        return cost;
    }
    
    public void print() {
        System.out.println("***********************CART***********************");
        System.out.println("Ordered Items:");

        for (int i = 0; i < qtyOrdered; i++) {
            DigitalVideoDisc dvd = itemOrdered[i];
            System.out.println((i + 1) + ". DVD - " +
                               dvd.getTitle() + " - " +
                               dvd.getCategory() + " - " +
                               dvd.getDirector() + " - " +
                               dvd.getLength() + ": " +
                               dvd.getCost() + " $");
        }
        System.out.println("Total cost: " + totalCost() + " $");
        System.out.println("******************************************************");
    }
    
    public void searchById(int id) {
        boolean found = false;
        for (int i = 0; i < qtyOrdered; i++) {
            if (itemOrdered[i].getId() == id) {
                System.out.println("Result: ");
                System.out.println(itemOrdered[i].toString());
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Cannot found DVD.");
        }
    }

    public void searchByTitle(String title) {
        boolean found = false;
        for (int i = 0; i < qtyOrdered; i++) {
            if (itemOrdered[i].isMatch(title)) {
                System.out.println("Result: ");
                System.out.println(itemOrdered[i].toString());
                found = true;
            }
        }
        if (!found) {
            System.out.println("Cannot found DVD.");
        }
    }
}

